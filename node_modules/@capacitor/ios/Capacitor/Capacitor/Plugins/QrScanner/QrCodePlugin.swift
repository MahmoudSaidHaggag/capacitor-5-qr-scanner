import Foundation
import AVFoundation

/**
 * Please read the Capacitor iOS Plugin Development Guide
 * here: https://capacitorjs.com/docs/plugins/ios
 */
@objc(QrScanner)
public class QrScanner: CAPPlugin {
    
    var backCall:CAPPluginCall?
    public override func load() {
        
    }
    @objc func scanQrCode(_ call: CAPPluginCall) {
        print("------")
        backCall = call;
        
        DispatchQueue.main.async {
            print("___________")
            let qrController = QRScannerViewController();
            qrController.delegate = self;
            qrController.modalPresentationStyle = .fullScreen
            print("~~~~~~")
            self.bridge.viewController.present(qrController, animated: true, completion: nil)
            print("++++++")
        }
        
    }
}

extension QrScanner:QRScannerDelegate{
    public func qrScannerDidSuccess(scanner: QRScannerViewController, result: String) {
        scanner.dismiss(animated: true) { [self] in
            print("扫描结果：\(result)");
            if let backResponse = backCall {
                backResponse.resolve([
                  "result": result,
                ])
            }
        }
    }
    
    public func qrScannerDidFail(scanner: QRScannerViewController, error: QRScannerError) {
        
        scanner.dismiss(animated: true) { [self] in
            print("扫描失败：\(error.localizedDescription)")
            if let backResponse = backCall {
                backResponse.resolve([
                  "result": "",
                ])
            }
        }
    }
}
